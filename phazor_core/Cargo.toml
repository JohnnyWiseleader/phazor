[package]
name = "phazor_core"
version = "0.1.0"
edition = "2024"
rust-version = "1.85"

[features]
default = []
# Enable the in-memory "fake" sink (good for tests and demos)
fake = ["dep:js-sys"]
# Enable the Rexie-backed sink (IndexedDB) â€” only meaningful on wasm32
rexie-sink = ["dep:rexie", "dep:serde-wasm-bindgen", "dep:js-sys"]
# Two rest-http sinks - one for WASM and one for native
rest-http-wasm = ["dep:gloo-net", "dep:js-sys"]
rest-http-native = ["dep:reqwest", "dep:tower", "dep:http", "dep:tower-http"]

[dependencies]
anyhow = "1"
async-trait = "0.1"
serde = { version = "1", features = ["derive"] }
serde_json = "1"
uuid = { version = "1", features = ["v5", "serde"] }
tokio = { version = "1", default-features = false, features = ["sync"] }
log = "0.4"

# These three are only needed when building for wasm32 *and* the rexie-sink or 
# rest-http-wasm feature is on.
# Mark them optional so they aren't compiled unless the feature is enabled.
[target.'cfg(target_arch = "wasm32")'.dependencies]
rexie = { version = "0.6", optional = true }
serde-wasm-bindgen = { version = "0.6", optional = true }
js-sys = { version = "0.3", optional = true }
gloo-net = { version = "0.5", optional = true, features = ["json"] }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
reqwest    = { version = "0.12", optional = true, features = ["json", "rustls-tls"] }
tower      = { version = "0.5", optional = true }         # for Retry/Timeout/etc.
tower-http = { version = "0.5", optional = true, features = ["trace"] }
http       = { version = "1", optional = true }

[dev-dependencies]
tokio = { version = "1", default-features = false, features = ["rt-multi-thread", "macros"] }
